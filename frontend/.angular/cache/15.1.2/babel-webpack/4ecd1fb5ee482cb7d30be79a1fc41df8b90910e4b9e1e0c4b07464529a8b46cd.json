{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/http.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddCustomerComponent_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1)(1, \"div\", 2)(2, \"label\");\n    i0.ɵɵelement(3, \"i\", 3);\n    i0.ɵɵtext(4, \" \\u05E9\\u05DD \\u05E4\\u05E8\\u05D8\\u05D9:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\");\n    i0.ɵɵelement(8, \"i\", 5);\n    i0.ɵɵtext(9, \" \\u05E9\\u05DD \\u05DE\\u05E9\\u05E4\\u05D7\\u05D4:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\");\n    i0.ɵɵelement(13, \"i\", 3);\n    i0.ɵɵtext(14, \"\\u05D0\\u05D9\\u05DE\\u05D9\\u05D9\\u05DC:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\");\n    i0.ɵɵelement(18, \"i\", 8);\n    i0.ɵɵtext(19, \" \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AddCustomerComponent_form_2_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.add());\n    });\n    i0.ɵɵelement(22, \"i\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.Form);\n    i0.ɵɵadvance(21);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.Form.valid);\n  }\n}\nexport class AddCustomerComponent {\n  constructor(router, route, http) {\n    this.router = router;\n    this.route = route;\n    this.http = http;\n    this.isSended = false;\n    this.sub = this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.getCustomer(params['id']);\n      } else {\n        this.buildForm();\n      }\n    });\n  }\n  buildForm(item) {\n    this.Form = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required]),\n      phone: new FormControl('', [Validators.required])\n    });\n  }\n  add() {\n    const sub = this.http.post(\"addcustomer\", this.Form?.value).pipe(finalize(() => {\n      if (sub?.unsubscribe) {\n        sub.unsubscribe();\n      }\n    })).subscribe(data => {\n      this.isSended = true;\n      this.router.navigate(['/customers']);\n    });\n  }\n  save() {\n    const sub = this.http.put(`customers/${this.Customer?.id}`, this.Form?.value).subscribe(() => {\n      this.router.navigate(['customers']);\n      sub.unsubscribe();\n    });\n  }\n  getCustomer(id) {\n    const sub = this.http.get(`customer/${id}`).subscribe(item => {\n      this.Customer = item;\n      this.buildForm(item);\n      sub.unsubscribe();\n    });\n  }\n  ngOnInit() {}\n}\nAddCustomerComponent.ɵfac = function AddCustomerComponent_Factory(t) {\n  return new (t || AddCustomerComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpService));\n};\nAddCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddCustomerComponent,\n  selectors: [[\"app-add-customer\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"field\"], [1, \"fa\", \"fa-user\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"w3-input\", \"w3-border\", \"w3-round\"], [1, \"fa\", \"fa-envelope\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"w3-input\", \"w3-border\", \"w3-round\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"w3-input\", \"w3-border\", \"w3-round\"], [1, \"fa\", \"fa-asterisk\"], [\"type\", \"text\", \"formControlName\", \"phone\", 1, \"w3-input\", \"w3-border\", \"w3-round\"], [\"routerLink\", \"/customers\", 1, \"newCus\", 3, \"disabled\", \"click\"], [1, \"fa\", \"fa-check\"]],\n  template: function AddCustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h6\");\n      i0.ɵɵtext(1, \" \\u05D4\\u05D5\\u05E1\\u05E4\\u05EA \\u05DC\\u05E7\\u05D5\\u05D7\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AddCustomerComponent_form_2_Template, 23, 2, \"form\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.Form);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i1.RouterLink],\n  styles: [\".btnFrame[_ngcontent-%COMP%] {\\n  padding: 12px;\\n}\\n\\nh6[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.w3-third[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin: 0 3px;\\n}\\n\\n.newCus[_ngcontent-%COMP%] {\\n  background-color: #629460;\\n  border: none;\\n  color: white;\\n  margin: 15px 15px 10px 0px;\\n  padding: 10px 50px;\\n  border-radius: 5px;\\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.4196078431);\\n  cursor: pointer;\\n  font-size: 10px;\\n}\\n\\n.field[_ngcontent-%COMP%] {\\n  margin: 0px 15px 0px 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXJzL2FkZC1jdXN0b21lci9hZGQtY3VzdG9tZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKOztBQUVBO0VBQ0ksYUFBQTtBQUNKOztBQUNBO0VBQ0kseUJBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLDBCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLCtDQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7QUFFSjs7QUFHRTtFQUNFLHlCQUFBO0FBQUoiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuRnJhbWUge1xyXG4gICAgcGFkZGluZzogMTJweDtcclxufVxyXG5cclxuaDZ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi53My10aGlyZCB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBtYXJnaW46IDAgM3B4O1xyXG59XHJcbi5uZXdDdXMgeyAgIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzYyOTQ2MDsgXHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBtYXJnaW46IDE1cHggMTVweCAxMHB4IDBweDtcclxuICAgIHBhZGRpbmc6IDEwcHggNTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAzcHggIzAwMDAwMDZiO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyOztcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuXHJcbiAgfVxyXG5cclxuXHJcbiAgLmZpZWxkIHtcclxuICAgIG1hcmdpbiA6IDBweCAxNXB4IDBweCAxNXB4OyAgICBcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","finalize","i0","AddCustomerComponent","constructor","router","route","http","sub","params","subscribe","getCustomer","buildForm","item","Form","firstName","required","lastName","email","phone","add","post","value","pipe","unsubscribe","data","isSended","navigate","save","put","Customer","id","get","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\wamp64\\www\\firstProject\\frontend\\src\\app\\customers\\add-customer\\add-customer.component.ts","C:\\wamp64\\www\\firstProject\\frontend\\src\\app\\customers\\add-customer\\add-customer.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators,FormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\nimport { finalize, Subscription } from 'rxjs';\r\nimport { HttpService } from 'src/app/http.service';\r\nimport { Customer } from './add-customers.interface'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-customer',\r\n  templateUrl: './add-customer.component.html',\r\n  styleUrls: ['./add-customer.component.scss']\r\n})\r\nexport class AddCustomerComponent {\r\n    \r\n  isSended= false;\r\n  Customer?: Customer;\r\n  sub?: Subscription;\r\n  Form?: FormGroup;\r\n\r\n  buildForm(item?: Customer) {\r\n      this.Form = new FormGroup({\r\n          firstName: new FormControl('',[\r\n              Validators.required,\r\n          ]),\r\n          lastName: new FormControl('',[\r\n              Validators.required,\r\n          ]),\r\n          email: new FormControl('',[\r\n              Validators.required,\r\n          ]),\r\n          phone: new FormControl('',[\r\n            Validators.required,\r\n        ]),\r\n      });\r\n  }\r\n\r\n  add(){\r\n    const sub = this.http.post<Customer[]>(\"addcustomer\", this.Form?.value).pipe(finalize(() => {\r\n        if (sub?.unsubscribe) {\r\n            sub.unsubscribe();\r\n        }\r\n    })).subscribe(data => {\r\n        this.isSended = true;\r\n        this.router.navigate(['/customers']);\r\n        \r\n    });\r\n  }\r\n\r\n\r\n  save() {\r\n      const sub = this.http.put<void>(`customers/${this.Customer?.id}`, this.Form?.value).subscribe(() => {\r\n          this.router.navigate(['customers']);\r\n          sub.unsubscribe();\r\n      });\r\n  }\r\n\r\n   getCustomer(id: string) {\r\n      const sub = this.http.get<Customer>(`customer/${id}`).subscribe(item => {\r\n          this.Customer = item;\r\n          this.buildForm(item);\r\n          sub.unsubscribe();\r\n      });\r\n  }\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private http: HttpService) {\r\n\r\n      this.sub = this.route.params.subscribe(params => {\r\n          if (params['id']) {\r\n              this.getCustomer(params['id']);\r\n          } else {\r\n              this.buildForm();\r\n          }\r\n      });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n\r\n}","\r\n\r\n\r\n<h6> הוספת לקוח</h6>\r\n\r\n<form *ngIf=\"Form\" [formGroup]=\"Form\">\r\n    <div class=\"field\">\r\n        <label><i class=\"fa fa-user\"></i> שם פרטי:</label>\r\n        <input class=\"w3-input w3-border w3-round\" type=\"text\" formControlName=\"firstName\">\r\n    </div>\r\n\r\n    <div class=\"field\">\r\n        <label><i class=\"fa fa-envelope\"></i> שם משפחה:</label>\r\n        <input class=\"w3-input w3-border w3-round\" type=\"text\" formControlName=\"lastName\">\r\n    </div>\r\n\r\n    <div class=\"field\">\r\n        <label><i class=\"fa fa-user\"></i>אימייל:</label>\r\n        <input class=\"w3-input w3-border w3-round\" type=\"text\" formControlName=\"email\">\r\n    </div>\r\n\r\n    <div class=\"field\">\r\n        <label><i class=\"fa fa-asterisk\"></i> טלפון:</label>\r\n        <input class=\"w3-input w3-border w3-round\" type=\"text\" formControlName=\"phone\">\r\n    </div>\r\n \r\n\r\n    <button class=\"newCus\" [disabled]= \"!Form.valid\"  (click)=\"add()\"  routerLink=\"/customers\"><i class=\"fa fa-check\"></i></button>\r\n \r\n\r\n   \r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}